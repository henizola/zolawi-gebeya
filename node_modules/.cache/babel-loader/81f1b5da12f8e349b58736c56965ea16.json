{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDgcun5uuxaqbVhs4mdZQmf-tA9E78QKGw\",\n  authDomain: \"zolawi-gebeya.firebaseapp.com\",\n  databaseURL: \"https://zolawi-gebeya.firebaseio.com\",\n  projectId: \"zolawi-gebeya\",\n  storageBucket: \"zolawi-gebeya.appspot.com\",\n  messagingSenderId: \"423565300945\",\n  appId: \"1:423565300945:web:3d7331117eaa08923a61f0\",\n  measurementId: \"G-MDCR2SH6N3\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snap = await userRef.get();\n  console.log(snap);\n\n  if (!snap.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createDate = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createDate,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/heni/Desktop/React-with-andrie/e-commerce-app/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snap","get","console","log","exists","displayName","email","createDate","Date","set","error","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAsB,cAAtB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAGA,MAAMC,MAAM,GAAC;AACTC,EAAAA,MAAM,EAAE,yCADC;AAETC,EAAAA,UAAU,EAAE,+BAFH;AAGTC,EAAAA,WAAW,EAAE,sCAHJ;AAITC,EAAAA,SAAS,EAAE,eAJF;AAKTC,EAAAA,aAAa,EAAE,2BALN;AAMTC,EAAAA,iBAAiB,EAAE,cANV;AAOTC,EAAAA,KAAK,EAAE,2CAPE;AAQTC,EAAAA,aAAa,EAAE;AARN,CAAb;AAWE,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAkC;AACzE,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAACC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAd;AACA,QAAMC,IAAI,GAAE,MAAMJ,OAAO,CAACK,GAAR,EAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AAEA,MAAG,CAACA,IAAI,CAACI,MAAT,EAAgB;AACd,UAAM;AAACC,MAAAA,WAAD;AAAaC,MAAAA;AAAb,QAAoBZ,QAA1B;AACA,UAAMa,UAAU,GAAC,IAAIC,IAAJ,EAAjB;;AAEA,QAAG;AACC,YAAMZ,OAAO,CAACa,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,UAHgB;AAIhB,WAAGZ;AAJa,OAAZ,CAAN;AAOH,KARD,CAQC,OAAMe,KAAN,EACD;AACIR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH;AACF;AACF,CAvBM;AAyBP3B,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB;AAEA,OAAO,MAAM4B,IAAI,GAAC7B,QAAQ,CAAC6B,IAAT,EAAX;AACP,OAAO,MAAMf,SAAS,GAAEd,QAAQ,CAACc,SAAT,EAAjB;AAEP,MAAMgB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAKL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA9B;AAEP,eAAe9B,QAAf","sourcesContent":["import firebase from  'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth'\r\n\r\n\r\nconst config={\r\n    apiKey: \"AIzaSyDgcun5uuxaqbVhs4mdZQmf-tA9E78QKGw\",\r\n    authDomain: \"zolawi-gebeya.firebaseapp.com\",\r\n    databaseURL: \"https://zolawi-gebeya.firebaseio.com\",\r\n    projectId: \"zolawi-gebeya\",\r\n    storageBucket: \"zolawi-gebeya.appspot.com\",\r\n    messagingSenderId: \"423565300945\",\r\n    appId: \"1:423565300945:web:3d7331117eaa08923a61f0\",\r\n    measurementId: \"G-MDCR2SH6N3\"\r\n  };\r\n\r\n  export const createUserProfileDocument = async (userAuth, additionalData)=>{\r\n    if (!userAuth) return;\r\n    const userRef=firestore.doc(`users/${userAuth.uid}`);\r\n    const snap= await userRef.get();\r\n    console.log(snap)\r\n\r\n    if(!snap.exists){\r\n      const {displayName,email}=userAuth;\r\n      const createDate=new Date();\r\n\r\n      try{\r\n          await userRef.set({\r\n            displayName,\r\n            email,\r\n            createDate,\r\n            ...additionalData\r\n\r\n          })\r\n      }catch(error)\r\n      {\r\n          console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export const auth=firebase.auth();\r\n  export const firestore= firebase.firestore();\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({prompt:'select_account'});\r\n  export const signInWithGoogle = ()=> auth.signInWithPopup(provider);\r\n  \r\n  export default firebase;"]},"metadata":{},"sourceType":"module"}